<?xml version="1.0" encoding="UTF-8" ?>
<class name="GDMMKV" inherits="Object" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
	</brief_description>
	<description>
		This is an MMKV-based storage plugin designed for the Godot game engine, implemented in C++ and compiled as a DLL. 
	It is integrated into Godot using the GDExtension system and provides basic interfaces for real-time data storage. 
	The plugin leverages Tencent's MMKV library to deliver high-performance and efficient key-value storage for game developers. 

	Key features include:
	- Support for storing and retrieving various data types such as booleans, integers, floats, and vectors.
	- Ability to manage multiple independent storage instances using unique identifiers.
	- Seamless integration with the Godot engine, enabling easy setup and usage in game projects.
	- High-speed and low-latency operations optimized for both desktop and mobile platforms.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="init">
			<return type="void" />
			<param index="0" name="file_path" type="String" />
			<param index="1" name="id" type="String" default="&quot;default&quot;" />
			<description>
				Initializes the storage system with a file path and an optional unique identifier for the storage instance.
			</description>
		</method>
		<method name="create_store">
			<return type="void" />
			<param index="0" name="id" type="String" />
			<description>
				Creates a new storage instance with the specified unique identifier.
			</description>
		</method>
		<method name="has_key">
			<return type="bool" />
			<param index="0" name="key" type="String" />
			<description>
				Checks if a key exists in the current storage.
			</description>
		</method>
		<method name="remove_key">
			<return type="bool" />
			<param index="0" name="key" type="String" />
			<description>
				Remove the key and value in the current storage.
			</description>
		</method>
		<method name="has_store">
			<return type="bool" />
			<param index="0" name="id" type="String" />
			<description>
				Checks if a storage instance with the specified identifier exists.
			</description>
		</method>
		<method name="get_bool">
			<return type="bool" />
			<param index="0" name="key" type="String" />
			<param index="1" name="default_value" type="bool" default="false" />
			<description>
				Retrieves a boolean value from the storage with the given key. Returns the default value if the key does not exist.
			</description>
		</method>
		<method name="get_float">
			<return type="float" />
			<param index="0" name="key" type="String" />
			<param index="1" name="default_value" type="float" default="0.0" />
			<description>
				Retrieves a float value from the storage with the given key. Returns the default value if the key does not exist.
			</description>
		</method>
		<method name="get_int">
			<return type="int" />
			<param index="0" name="key" type="String" />
			<param index="1" name="default_value" type="int" default="0" />
			<description>
				Retrieves an integer value from the storage with the given key. Returns the default value if the key does not exist.
			</description>
		</method>
		<method name="get_vector2">
			<return type="Vector2" />
			<param index="0" name="key" type="String" />
			<description>
				Retrieves a Vector2 value from the storage with the given key.
			</description>
		</method>
		<method name="get_vector2i">
			<return type="Vector2i" />
			<param index="0" name="key" type="String" />
			<description>
				Retrieves a Vector2i value from the storage with the given key.
			</description>
		</method>
		<method name="set_bool">
			<return type="bool" />
			<param index="0" name="key" type="String" />
			<param index="1" name="value" type="bool" />
			<description>
				Stores a boolean value with the specified key in the storage.
			</description>
		</method>
		<method name="set_float">
			<return type="bool" />
			<param index="0" name="key" type="String" />
			<param index="1" name="value" type="float" />
			<description>
				Stores a float value with the specified key in the storage.
			</description>
		</method>
		<method name="set_int">
			<return type="bool" />
			<param index="0" name="key" type="String" />
			<param index="1" name="value" type="int" />
			<description>
				Stores an integer value with the specified key in the storage.
			</description>
		</method>
		<method name="set_vector2">
			<return type="bool" />
			<param index="0" name="key" type="String" />
			<param index="1" name="value" type="Vector2" />
			<description>
				Stores a Vector2 value with the specified key in the storage.
			</description>
		</method>
		<method name="set_vector2i">
			<return type="bool" />
			<param index="0" name="key" type="String" />
			<param index="1" name="value" type="Vector2i" />
			<description>
				Stores a Vector2i value with the specified key in the storage.
			</description>
		</method>
	</methods>
</class>
